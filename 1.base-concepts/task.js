//(ax² + bx + c = 0).
"use strict"
function solveEquation(a, b, c) {
  let arr = [];
 //3.Вычислите дискриминант по формуле b²-4*a*c. Для возведения в степень используйте оператор — ** или функцию Math.pow.
 //4.Результатом функции должен быть массив.
  let d = (b²-4*a*c);
 //5.Если дискриминант меньше нуля, то корней нет (пустой массив).
  if (d < 0) {

  }
 //6.Если дискриминант равен нулю, то корень один. Его нужно вычислить и вернуть из функции (массив с одним корнем). Формула для вычисления корня: -b/(2*a).
  else if (d == 0) {
    arr root0 = (-b/(2*a));
  }
 //7.Если дискриминант больше нуля, то существует два решения уравнения. Их нужно вычислить и вернуть из функции — массив с двумя корнями: (-b + Math.sqrt(d) )/(2*a) и (-b - Math.sqrt(d) )/(2*a).
  else if (d > 0){
    let root1 = (-b + Math.sqrt(d) )/(2*a);
    let root2 и (-b - Math.sqrt(d) )/(2*a);
    arr.push(root1,root2);
  }

    return arr;
}

function calculateTotalMortgage(percent, contribution, amount, countMonths) {
//2. Преобразуйте процентную ставку из диапазона от 0 до 100 в диапазон от 0 до 1 и из годовой ставки — в месячную.
  let per = percent/100/12;
//3. Посчитайте тело кредита — сумму, которую нужно вернуть банку (сумма кредита минус первоначальный взнос).
  let creditBody = amount - contribution;
//4. Ежемесячная оплата рассчитывается по формуле: Платёж = S * (P + (P / (((1 + P)^n) - 1))),
//где: S — тело кредита, P — 1/12 процентной ставки (от 0 до 1),
//n — количество месяцев, ^ — возведение в степень.
//Для возведения в степень используйте оператор — ** или функцию Math.pow.
  let monthlyPayment = creditBody * (per + (per / (((1 + per) ** countMonths) - 1)));
//5. Посчитайте общую сумму, которую придётся заплатить клиенту.
  let sum = monthlyPayment * countMonths;
//6. Округлите результат до двух значений после запятой. Результат округления должен быть числом.
  sum = Number(sum.toFixed(2));
//7. Верните результат из функции. Результатом функции должно быть значение числового типа.

  return sum;

}

